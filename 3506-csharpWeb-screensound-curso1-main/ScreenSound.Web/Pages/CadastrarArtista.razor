@page "/CadastrarArtista"
@using Microsoft.Extensions.Logging
@inject ArtistasAPI artistaAPI
@inject NavigationManager navigationManager

<PageTitle>Cadastrar Artista</PageTitle>

<MudPaper Class="px-8 pt-2 pb-4 mx-12 my-8" Justify="Justify.Center">

    <MudText Class="mt-8" Typo="Typo.h4">Cadastro do Artista</MudText>

    <MudForm @ref="form" @bind-bind-IsValid="@success" @bind-Errors="@errors">

        <MudTextField Class="mt-4" T="string" Placeholder="Nome do Artista"
                      Variant="Variant.Outlined"
                      @bind-Value="nome"
                      Required="true"
                      RequiredError="Campo obrigatório." />

        <MudTextField Class="mt-4" T="string" Placeholder="Biografia do artista"
                      Variant="Variant.Outlined"
                      @bind-Value="bio"
                      Lines="4"
                      Required="true"
                      RequiredError="Campo obrigatório." />

        <MudImage Class="mt-4" src="@fileImage" />
        <MudFileUpload T="IBrowserFile" Accept=".jpeg" FilesChanged="UploadFile">
            <ButtonTemplate>
                <MudButton HtmlTag="label"
                           Variant="Variant.Filled"
                           Color="Color.Primary"
                           StartIcon="@Icons.Material.Filled.PhotoCamera"
                           for="@context">
                    Foto de Perfil
                </MudButton>
            </ButtonTemplate>
        </MudFileUpload>


        <div class="d-flex align-center justify-space-between mt-4">
            <MudButton Variant="Variant.Filled"
                       @onclick="Cadastrar"
                       Color="Color.Primary"
                       Class="ml-auto">
                Cadastrar
            </MudButton>

            <MudButton Variant="Variant.Filled"
                       @onclick="Voltar"
                       Color="Color.Info"
                       Class="ml-auto">
                Voltar
            </MudButton>
        </div>

    </MudForm>
</MudPaper>


@code {
    bool success;
    string[] errors = { };
    MudForm form;
    private string? nome;
    private string? bio;
    private string? fileImage = string.Empty;
    private string? fotoPerfil = string.Empty;

    private async Task Cadastrar()
    {
        try
        {
            var request = new ArtistaRequest(nome!, bio!, fotoPerfil);
            await artistaAPI.AddArtistaAsync(request);
            navigationManager.NavigateTo("/Artistas");
        }
        catch (Exception)
        {
            //Logger.LogInformation("Erro ao cadastrar artista!");
        }

    }

    private void Voltar()
    {
        navigationManager.NavigateTo("/Artistas");
    }

    IList<IBrowserFile> files = new List<IBrowserFile>();
    private async Task UploadFile(IBrowserFile file)
    {
        long maxFileSize = 1024 * 1024 * 15;
        var format = "image/jpeg";
        var resizedImage = await file.RequestImageFileAsync(format, 200, 200);

        using var fileStream = resizedImage.OpenReadStream();
        using var memoryStream = new MemoryStream();
        await fileStream.CopyToAsync(memoryStream);

        var imageUpload = Convert.ToBase64String(memoryStream.ToArray());
        fileImage = $"data:{format};base64,{imageUpload}";

        fotoPerfil = imageUpload;
    }
}
